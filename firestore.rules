rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Funções auxiliares
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner() {
      return request.auth.uid == resource.data.ownerId;
    }
    
    function isSharedWith() {
      return request.auth.uid in resource.data.sharedWith;
    }
    
    function hasFullAccess() {
      return isOwner() || isSharedWith();
    }

    // Regras para a coleção 'lists'
    match /lists/{listId} {
      // Permitir leitura se o usuário tiver acesso total
      allow read: if isAuthenticated() && hasFullAccess();
      
      // Permitir criação se o usuário estiver autenticado e definir ele como dono
      allow create: if isAuthenticated() && 
                      request.resource.data.ownerId == request.auth.uid;
      
      // Permitir atualização para qualquer usuário com acesso total
      allow update: if isAuthenticated() && hasFullAccess();
      
      // Permitir exclusão para qualquer usuário com acesso total
      allow delete: if isAuthenticated() && hasFullAccess();
    }
    
    // Regras para a coleção 'users'
    match /users/{userId} {
      // Permitir criação apenas se o ID do documento corresponder ao ID do usuário
      allow create: if isAuthenticated() && 
                      request.auth.uid == userId;
      
      // Permitir leitura para todos os usuários autenticados (necessário para busca por email)
      allow read: if isAuthenticated();
      
      // Permitir atualização apenas para o próprio usuário
      allow update: if isAuthenticated() && request.auth.uid == userId;
      
      // Não permitir exclusão de usuários via cliente
      allow delete: if false;
    }
  }
} 